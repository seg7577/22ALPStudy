//BOJ - 17478 - 재귀함수가 뭔가요?
//띄어쓰기 못 찾아서 이틀을 어리바리...
#include <iostream>
using namespace std;

int i = 0;
bool plag, plag2;
void func1(int n)
{
	if (n == 0)	plag = true; //"라고 답변하였지."이라는 텍스트가 출력 되기 전까지를 체크하고 n번 반복하기 위함
	if (!plag)
	{
		for (int j = 0; j < i; j++)	cout << "____"; //_(4개)의 반복횟수는 함수의 호출횟수와 동일하므로 i로 호출횟수를 체크하여 반복
		cout << "\"재귀함수가 뭔가요?\"\n";
		for (int j = 0; j < i; j++)	cout << "____";
		cout << "\"잘 들어보게. 옛날옛날 한 산 꼭대기에 이세상 모든 지식을 통달한 선인이 있었어.\n";
		for (int j = 0; j < i; j++)	cout << "____";
		cout << "마을 사람들은 모두 그 선인에게 수많은 질문을 했고, 모두 지혜롭게 대답해 주었지.\n";
		for (int j = 0; j < i; j++)	cout << "____";
		cout << "그의 답은 대부분 옳았다고 하네. 그런데 어느 날, 그 선인에게 한 선비가 찾아와서 물었어.\"\n";
	}
	else//n번의 반복이 끝났으면 "라고 답변하였지." 텍스트를 반복하기 위해 return
	{
		return;
	}
	i++;//_*4개 출력을 제어하기 위함
	func1(--n);//n번 반복하기 위해 호출할 때마다 -1을 해줌

	if (plag) //n번의 반복이 끝났다면 실행.
	{
		if (!plag2)
		{
			for (int j = 0; j < i; j++)	cout << "____";
			cout << "\"재귀함수가 뭔가요?\"\n";
			for (int j = 0; j < i; j++)	cout << "____";
			cout << "\"재귀함수는 자기 자신을 호출하는 함수라네\"\n";
			for (int j = 0; j < i; j++)	cout << "____";
			cout << "라고 답변하였지.\n";
			plag2 = true;////"재귀함수가 뭔가요?", "재귀함수는 자기 자신을 호출하는 함수라네" 라는 멘트는 딱 한 번만 출력 되어야 하므로 이 멘트를 출력하였으면 plag2에 true를 표시해주어 중복 출력을 방지함
			i--;
		}
		else
		{
			for (int j = 0; j < i; j++)	cout << "____";
			cout << "라고 답변하였지.\n";
			i--;
		}
	}
}

int main()
{
	int n;
	cin >> n;
	cout << "어느 한 컴퓨터공학과 학생이 유명한 교수님을 찾아가 물었다.\n"; //시작멘트
	func1(n);
	cout << "라고 답변하였지."; //문제에서 입력의 범위를 1부터라고 말했으므로 함수가 종료된 이후에 호출 되도 무관함
	return 0;
}